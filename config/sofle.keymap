/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/ext_power.h>

&left_encoder { resolution = <1>; };
&right_encoder { resolution = <1>; };

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
// ------------------------------------------------------------------------------------------------------------
// | ESC/1 |  1  |  2  |  3   |  4   |  5   |                   |  6   |  7    |  8    |  9   |   0   | BKSPC |
// | TAB   |  Q  |  W  |  E   |  R   |  T   |                   |  Y   |  U    |  I    |  O   |   P   |   |   |
// | CAPS  |  A  |  S  |  D   |  F   |  G   |                   |  H   |  J    |  K    |  L   |   ;   |   '   |
// | SHIFT |  Z  |  X  |  C   |  V   |  B   |  CMD+0 |  | MUTE  |  N   |  M    |  ,    |  .   |   /   | RS/EN |
//               | GUI | ALT  |  {   |  }   |  ENTER |  | SPACE |  ^   |  <-   |  v    |  ->  |
            bindings = <
&lt 1 ESC        &kp N1   &kp N2   &kp N3    &kp N4    &kp N5                             &kp N6 &mt KP_MINUS N7    &mt KP_PLUS N8    &mt UNDER N9   &mt KP_EQUAL N0   &kp BSPC
&kp TAB          &kp Q    &kp W    &kp E     &kp R     &kp T                              &kp Y  &kp U     &kp I     &kp O    &kp P    &kp BSLH
&kp CAPS         &kp A    &kp S    &kp D     &kp F     &kp G                              &kp H  &kp J     &kp K     &kp L    &kp SEMI &kp SQT
&kp LSHFT        &kp Z    &kp X    &kp C     &kp V     &kp B     &kp LG(N0)    &kp C_MUTE &kp N  &kp M     &kp COMMA &kp DOT  &kp FSLH &mt RSHFT RET
                 &kp LGUI &kp LALT &kp LBKT  &kp RBKT            &kp RET       &kp SPACE  &kp UP &kp LEFT  &kp DOWN  &kp RIGHT
          >;

           sensor-bindings = <&inc_dec_cp F12 F11 &inc_dec_cp E F &inc_dec_cp G H>;
        };

        lower_layer {
// TODO: Some binds are waiting for shifted keycode support.
// ------------------------------------------------------------------------------------------------------------
// |       |     |     |      |      |      |                   |      |  7   |  8   |   9  |    0  |   =   |
// |       |     |     |      |      |      |                   |      |  4   |  5   |   6  |    +  |   -   |
// |       |     |     |      |      |      |                   |      |  1   |  2   |   3  |    *  |   %   |
// |       |     |     |      |      |      |        |  |       |      |  `   |  ,   |   .  |    /  | ENTER |
//               |     |      |      |      |        |  | PLAY  |BR DW | PREV |BR DW | NEXT |
            bindings = <
&trans    &trans    &trans    &trans      &trans    &trans                    &none    &kp N7   &kp N8    &kp N9    &kp N0        &kp KP_EQUAL
&trans    &trans    &trans    &trans      &trans    &trans                    &none    &kp N4   &kp N5    &kp N6    &kp PLUS      &kp KP_MINUS
&trans    &trans    &trans    &trans      &trans    &trans                    &none    &kp N1   &kp N2    &kp N3    &kp KP_MULTIPLY  &kp PRCNT
&trans    &trans    &trans    &trans      &trans    &trans    &trans   &trans &none    &kp GRAVE   &kp COMMA    &kp KP_DOT  &kp KP_DIVIDE &trans
                    &trans    &trans      &trans    &trans    &trans   &kp C_PP &kp C_BRI_UP    &kp C_PREV   &kp C_BRI_DN    &kp C_NEXT
            >;
            
        };
    };
};
